DIO BOOTCAMP

TEÓRICO

PILARES DA RESOLUÇÃO DE PROBLEMAS 

decomposição: 
    analise (separa o problema em problemas menores); sintese ( separa em problemas menores e o reconstrói de um jeito de sentido a solução. engloba a analise, que é a primeira fase)
    separa o problema → executa cada etapa → junta tudo.

padrões

abstração: 
    generalizar o problema de tal modo que posssa ser usado em diferentes cenarios.

algoritimos

desenvolvimento de um programa: analise e definição de dados de entrada e saida → descrever o problema por narrativas, fluxograma ou pseudocodigo → codificar em uma linguagem escolhida.

PROGRAMAÇÃO ORIENTADA A OBJETOS

objeto: 
    tem caracteristicas (o que tenho) - atributos, comportamentos (o que posso fazer) - métodos e estado (como faço);

classificação: 
    engloba o objeto descrito acima.

POO - tem variáveis ( caracteristicas, comportamentos e estado) associados a um objeto e essencialmente uma classe.
    pode ter classes dentro da classe principal. vantagens ( reuso de código = para a classe filha, mesmo que sobrescreva a classe mão, tambem reutiliza os codigos da classe mãe).

GIT E GITHUB
    VERSIONAMENTO NO GIT

arquivo md = mark down - o começo, um arquivo de instrução.

Passo a passo no git bash:
ja dentro da pasta..
1- git init 
    (é aberto um repositório vazio GIT na sua pasta).
2- git add *arquivo que sera mandado p area de staging* 
    (para add todos os arquivos da pasta usa 'git add . '
3- git commit -m “primeiro commit” *será o nome do seu primeiro commit* 
    (-m = mensagem do commit)

atualização de versões (novos commits)

1 - git commit -m “descrição/ mensagem do novo commit” 
    ( primeiro comando com titulo de atualização)
2- git push origin NOME DA BRANCH 

Branch: ramificação do projeto. usado para add nova paginao ao projeto. (tipo area de trabalho);
não necessariamente pode ser para novos arquivos pode se para novas versões (alterações).

para criar uma nova:
1- git checkout -b “nova-branch” 
    (ja sai da branch anterior e cria uma nova e entra nela )
2- git commit -m “nova-branch” 
    (p trocar de branch)
3 - git push origin 
    (fazer o upload das novas atualizações ou arquivos.)

 ** git checkout “nome da branch” ( p trocar de branch)
** git checkout “nome da branch” p voltar p branch anterior.
**  git merge “nome da nova branch” ( p as duas branchs terem os mesmos arquivos);

download dos arquivos do github p seu pc:

1- cria uma nova pasta
2- abre o bash e da o comando git clone LINK DA PASTA QUE QUER CLONAR
 p atualizar a versão que clonou:  entra na pasta baixada → git puul ( o arquivo é atualizado automaticamente);

ATALHOS VSCODE

CTRL+SHIFT+P = abrir a paleta de comandos